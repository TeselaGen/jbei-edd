---
version: '2.1'
networks:
  proxynet: {}
volumes:
  attachdata: {}
  staticdata: {}
  tlsdata: {}
services:
  nginx:
    image: nginx:1.13
    # using container_name means there will only ever be one nginx container!
    container_name: nginx
    restart: always
    networks:
      - proxynet
    volumes:
      - /etc/nginx/conf.d
      - /etc/nginx/vhost.d
      - /usr/share/nginx/html
      - tlsdata:/etc/nginx/certs:ro
      - attachdata:/usr/share/nginx/html/uploads:ro
      - staticdata:/usr/share/nginx/html/static:ro
      - ./healthcheck.sh:/bin/healthcheck.sh
    healthcheck:
      test: ['CMD', '/bin/healthcheck.sh']
      interval: 1m
      timeout: 5s
      retries: 3
    logging:
      driver: 'json-file'
      options:
        max-size: 1m
        max-file: '5'
    # Below are some options for exposing HTTP/HTTPS ports from nginx to outside the container
    ports:
      # Make the http/https ports available on the Docker host IPv4 loopback interface
      - '127.0.0.1:80:80'
      - '127.0.0.1:443:443'
      # Make the http/https ports available on ALL Docker host IPv4 interfaces
      #- '0.0.0.0:80:80'
      #- '0.0.0.0:443:443'
      # Make the http/https ports available on a private IP like 10.20.17.100
      #- '10.20.17.100:80:80'
      #- '10.20.17.100:443:443'
  nginx-gen:
    image: jwilder/docker-gen
    # using container_name means there will only ever be one nginx-gen container!
    container_name: nginx-gen
    entrypoint:
      - '/usr/local/bin/docker-gen'
      - '-watch'
      - '-notify-sighup'
      - 'nginx'
      - '/etc/docker-gen/templates/nginx.tmpl'
      - '/etc/nginx/conf.d/default.conf'
    networks:
      - proxynet
    volumes_from:
      - nginx
    volumes:
      - /var/run/docker.sock:/tmp/docker.sock:ro
      - ./nginx.tmpl:/etc/docker-gen/templates/nginx.tmpl:ro
    logging:
      driver: 'json-file'
      options:
        max-size: 1m
        max-file: '5'
  letsencrypt:
    # TODO: this should probably get forked;
    #   - the project is not maintained
    #   - has hard dependency on another project (kuba/simp_le) that is not maintained
    #   - same dependency is referencing an older branch that has tests marked as failing
    #   - entire combination has stopped working as Let's Encrypt APIs updated
    image: jrcs/letsencrypt-nginx-proxy-companion
    container_name: letsencrypt
    depends_on:
      - nginx
    networks:
      - proxynet
    volumes_from:
      - nginx
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock:ro
      - tlsdata:/etc/nginx/certs:rw
    environment:
      NGINX_DOCKER_GEN_CONTAINER: nginx-gen
    logging:
      driver: 'json-file'
      options:
        max-size: 1m
        max-file: '5'
